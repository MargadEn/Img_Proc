#include <opencv2/opencv.hpp>
#include <iostream>
#include <string>

using namespace cv;
using namespace std;

int main()
{
    string videoFilename = "Tiger.mp4";
    string backgroundImageFilename = "Galaxy.jpg";

    VideoCapture video(videoFilename);
    if (!video.isOpened())
    {
        cerr << "Failed to open the video file" << endl;
        return -1;
    }

    Mat background = imread(backgroundImageFilename);
    if (background.empty())
    {
        cerr << "Failed to open the background image" << endl;
        return -1;
    }

    // Initialize video writer
    Size videoSize(static_cast<int>(video.get(CAP_PROP_FRAME_WIDTH)), static_cast<int>(video.get(CAP_PROP_FRAME_HEIGHT)));
    VideoWriter outputVideo("CombinedVideo.mp4", VideoWriter::fourcc('m', 'p', '4', 'v'), 30, videoSize);

    Mat frame, hsv, mask, result;

    while (true)
    {
        video >> frame;
        if (frame.empty())
            break;

        // Convert frame to HSV color space
        cvtColor(frame, hsv, COLOR_BGR2HSV);

        // Create mask by thresholding for green pixels
        inRange(hsv, Scalar(35, 100, 100), Scalar(90, 255, 255), mask);

        // Invert the mask
        bitwise_not(mask, mask);

        // Apply the mask to the frame to remove the green screen
        bitwise_and(frame, frame, result, mask);

        // Add the background to the result
        background.copyTo(result, ~mask);

        // Show the result
        imshow("Combined Video", result);
        outputVideo.write(result);

        if (waitKey(30) == 27) // Press 'Esc' to exit
            break;
    }

    video.release();
    outputVideo.release();
    destroyAllWindows();

    return 0;
}
